.button
  +appearance(none)
  +user-select(none)
  background-color: transparent
  border: solid 2px brand-color(green)
  color: brand-color(green)
  cursor: pointer
  display: inline-block
  font-family: $type-primary
  font-size: text-size(7)
  font-weight: $bold
  padding: 1em 1.5em
  position: relative
  text-align: center
  text-decoration: none
  transition: color 0.3s ease, background-color 0.3s ease, border-color 0.3s ease, width 0.3s ease, opacity 0.3s ease
  vertical-align: baseline
  white-space: nowrap
  overflow: hidden
  text-overflow: ellipsis
  font-smooth: always
  -webkit-font-smoothing: antialiased
  -moz-osx-font-smoothing: grayscale
  +selected
    color: darken(brand-color(green), 15%)
    border-color: darken(brand-color(green), 15%)
    svg
      fill: darken(brand-color(green), 15%)
  &:last-child
    margin-right: 0
  svg
    fill: brand-color(green)



  // Primary buttons
  &--primary
    background-color: brand-color(green)
    border-color: brand-color(green)
    color: #fff
    svg
      fill: #fff
    +selected
      background-color: darken(brand-color(green), 10%)
      border-color: darken(brand-color(green), 10%)
      color: #fff



  // Secondary buttons
  &--secondary
    background-color: transparent
    border-color: ui-color(red)
    color: ui-color(red)
    svg
      fill: ui-color(red)
    +selected
      border-color: darken(ui-color(red), 20%)
      color: darken(ui-color(red), 20%)



  // Default disabled buttons
  &--disabled
    background-color: transparent
    border-color: $border-color-normal
    color: text-color(light)
    svg
      fill: text-color(light)
    +selected
      background-color: transparent
      border-color: $border-color-normal
      color: text-color(light)
      svg
        fill: text-color(base)



  // Inverse buttons
  &--inverse
    border-color: #fff
    color: #fff
    opacity: 0.88
    svg
      fill: #fff
    +selected
      border-color: #fff
      color: #fff
      opacity: 1

    .button--alert
      border-color: ui-color(red)
      color: ui-color(red)
      opacity: 1
      svg
        fill: ui-color(red)
      +selected
        border-color: #fff
        color: #fff
        svg
          fill: #fff

    .button--primary
      background-color: #fff
      border-color: #fff
      color: text-color(medium)
      svg
        fill: text-color(medium)

    .button--secondary
      opacity: 0.5
      +selected
        border-color: #fff
        color: #fff
        opacity: 1

    .button--disabled
      opacity: 0.15
      +selected
        border-color: #fff
        color: #fff
        opacity: 0.15



  // Button size style maps
  $button-sizes: (xlarge: (font-size: 18px, height: 58px, padding: 28px), large: (font-size: 16px, height: 50px, padding: 22px), normal: (font-size: 16px, height: 40px, padding: 15px), small: (font-size: 12px, height: 34px, padding: 12px), xsmall: (font-size: 12px, height: 30px, padding: 10px))

  // Create button sizes classes to use across breakpoints
  @mixin button-size($suffix)

    // Iterate through each size map to create appropriate styles
    @each $size, $property in $button-sizes
      &--#{$size}-#{$suffix}
        font-size: map-get($property, font-size) !important
        height: map-get($property, height) !important
        line-height: map-get($property, height) - 4px !important
        padding: 0 map-get($property, padding) !important
        &.square
          width: map-get($property, height) !important
        @if $size == large
          svg
            top: -2px



  // Adds the media queries to the button-size mixin
  @mixin button($suffix, $media: null)

    // We want to use @media screen whenever no $media
    // is passed into the mixin
    @if length($media) == 2
      +media($media)
        +button-size($suffix)
    @else
      @media screen
        +button-size($suffix)



  // Extra Small button classes
  +button(xs)

  // Small button classes
  +button(sm, min-width $sm)

  // Medium button classes
  +button(md, min-width $md)

  // Large button classes
  +button(lg, min-width $lg)

  // Extra Large button classes
  +button(xl, min-width $xl)

  // Split Buttons
  .split-button &
    float: left
    z-index: 1
    margin: 0 !important
    border-radius: $border-radius 0 0 $border-radius
    padding: 0 20px
    +selected
      z-index: 2
    &.button--primary
      border-right-color: rgba(#000, 0.1)
    + .button
      border-radius: 0 $border-radius $border-radius 0
      margin-left: -2px !important
      &.button--primary
        border-left-color: rgba(#000, 0.1)

.split-button
  +clearfix
  display: inline-block
  margin: 0 15px 0 0



  //
  // NOTE:
  // button sizes across breakpoints?
  //
  //
  // // Button Size Overrides
  // +media(max-width $mobile-max)
  //   &.default-on-mobile
  //     font-size: 14px
  //     height: 40px
  //     line-height: 36px
  //     padding: 0 15px
  //     &.square
  //       width: 50px
  //
  //   &.small-on-mobile
  //     font-size: 12px
  //     height: 34px
  //     line-height: 30px
  //     padding: 0 12px
  //     &.square
  //       width: 34px
  //
  //   &.x-small-on-mobile
  //     font-size: 12px
  //     height: 30px
  //     line-height: 26px
  //     padding: 0 10px
  //     &.square
  //       width: 30px



  // Close buttons
  // &--close
  //   padding: 0
  //   margin: 0
  //   width: 28px
  //   height: 28px
  //   line-height: 22px
  //   text-align: center
  //   z-index: 2
  //   .close-icon
  //     margin: 0
  //     top: 0

  // Square class for icon-only buttons with default size
  // &--square
  //   padding: 0
  //   width: 40px

  // Buttons /w Icons
  // &--icon-on-left svg
  //   margin: 0 5px 0 0
  // &--icon-on-right svg
  //   margin: 0 0 0 5px
