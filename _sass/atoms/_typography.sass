// Local Text Alignment Variables
$text-alignments: left, right, center, justify

// Headings shared styles
h1, h2, h3, h4, h5, h6
  color: text-color(medium)
  display: block
  font-weight: 200
  font-family: $type-secondary
  margin: 0
  line-height: 1.1
  text-rendering: optimizeLegibility
  font-smooth: always
  -webkit-font-smoothing: antialiased
  -moz-osx-font-smoothing: grayscale

.type-primary
  font-family: $type-primary
  font-style: normal
.type-secondary
  font-family: $type-secondary
  font-style: normal

.ls-small
  letter-spacing: letter-spacing(small)
.ls-mid
  letter-spacing: letter-spacing(mid)
.ls-wide
  letter-spacing: letter-spacing(wide)

// text sizes for each header
@for $num from 0 through 6
  h#{$num}
    font-size: text-size($num)

// Create text size classes
@mixin header-size($suffix)

  // Iterate through each text-size create text size classes
  @each $size, $number in $text-size
    .text-#{$size}-#{$suffix}
      font-size: #{$number}

// Adds the media queries to the header mixin
@mixin header-classes($suffix, $media: null)

  // We want to use @media screen whenever no $media
  // is passed into the mixin
  @if length($media) == 2
    +media($media)
      +header-size($suffix)
  @else
    @media screen
      +header-size($suffix)



// Extra Small header classes
+header-classes(xs)

// Small header classes
+header-classes(sm, min-width $sm)

// Medium header classes
+header-classes(md, min-width $md)

// Large header classes
+header-classes(lg, min-width $lg)

// Extra Large header classes
+header-classes(xl, min-width $xl)



// Horizontal Rule
hr
  height: 0
  margin: 30px 0
  border-top: 1px solid $border-color-light



// General text styles
p
  color: text-color(base)
  font-family: $type-primary
  font-size: text-size(7)
  line-height: 1.625
  margin: 0
  font-weight: 300
  font-smooth: always
  -webkit-font-smoothing: antialiased
  -moz-osx-font-smoothing: grayscale

h1 + h2
  margin-top: - spacing(0.5)

p + p
  margin-top: spacing(1)

p + .button
  margin-top: spacing(3)

.regular
  font-weight: normal

.bold
  font-weight: $bold

strong,
.bolder
  font-weight: $bolder

em,
.italic
  font-style: italic

.caps
  text-transform: uppercase
  &.type-secondary
    line-height: .9

a
  color: ui-color(link)
  font-weight: 500
  cursor: pointer
  transition: fast(color)
  text-decoration: none
  transition: .25s ease all
  +selected
    color: darken(ui-color(link), 10%)

p a
  border-bottom: 1px dotted ui-color(link)
  +selected
    border-bottom: none

p.text-color-white a
  color: white
  border-bottom: 1px dotted white
  +selected
    border-bottom: none

code
  font-family: monospace
  font-size: 16px

address
  font-size: 0.875rem



// Creates the text align styles for each alignment style
@mixin text-align-styles($suffix)

  // Iterate through align types and create the classes
  @each $type in $text-alignments
    .text-#{$type}-#{$suffix}
      text-align: #{$type} !important



// Adds the media queries to the text align style mixin
@mixin text-align($suffix, $media: null)

  // We want to use @media screen whenever no $media
  // is passed into the mixin
  @if length($media) == 2
    +media($media)
      +text-align-styles($suffix)
  @else
    @media screen
      +text-align-styles($suffix)



// Extra Small text-align classes
+text-align(xs)

// Small text-align classes
+text-align(sm, min-width $sm)

// Medium text-align classes
+text-align(md, min-width $md)

// Large text-align classes
+text-align(lg, min-width $lg)

// Extra Large text-align classes
+text-align(xl, min-width $xl)



// List styles
ul,
ol
  color: text-color(base)
  margin: 0
  padding: 0 0 0 2rem

.list-unstyled
  list-style: none
  padding: 0
